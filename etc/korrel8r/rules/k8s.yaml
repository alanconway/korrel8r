aliases:
  - name: workloads
    domain: k8s
    classes:
      - Pod
      - Deployment.apps
      - StatefulSet.apps
      - Secret
      - ConfigMap
      - CronJob.batch
      - Job.batch
      - DaemonSet.apps
      - ReplicaSet.apps
      - ReplicationController
      - HorizontalPodAutoscaler.autoscaling

  - name: networking
    domain: k8s
    classes:
      - Service
      - NetworkPolicy.networking.k8s.io

  - name: storage
    domain: k8s
    classes:
      - PersistentVolumeClaim
      - PersistentVolume
      - StorageClass.storage.k8s.io
      - VolumeAttachment.storage.k8s.io

  - name: users
    domain: k8s
    classes:
      - ServiceAccount
      - Role.rbac.authorization.k8s.io
      - RoleBinding.rbac.authorization.k8s.io
      - ClusterRole.rbac.authorization.k8s.io
      - ClusterRoleBinding.rbac.authorization.k8s.io

  - name: all
    domain: k8s
    classes: [workloads, networking, storage, users]

  - name: selectors
    domain: k8s
    classes:
      - PersistentVolumeClaim
      - ReplicationController
      - Service
      - DaemonSet.apps
      - Deployment.apps
      - ReplicaSet.apps
      - StatefulSet.apps
      - Job.batch
      - PodDisruptionBudget.policy

  - name: namespacedResources
    domain: k8s
    classes:
      - Pod
      - Deployment.apps
      - StatefulSet.apps
      - CronJob.batch
      - Job.batch
      - DaemonSet.apps
      - ReplicaSet.apps
      - ReplicationController
      - PersistentVolumeClaim
      - Service
      - Ingress.networking.k8s.io

rules:
   - name: PodToAlert
     start:
       domain: k8s
       classes: [Pod]
     goal:
       domain: alert
     result:
       query: |-
         alert:alert:{"namespace":"{{.metadata.namespace}}","pod":"{{.metadata.name}}"}

   - name: SelectorToPods
     start:
       domain: k8s
       classes: [selectors]
     goal:
       domain: k8s
       classes: [Pod]
     result:
       query: |-
         k8s:Pod:{"namespace": "{{.metadata.namespace}}"
         {{- with .spec.selector.matchLabels}}, "labels": {{mustToJson . -}}{{end -}} }

   - name: EventToAll
     start:
       domain: k8s
       classes: [Event]
     goal:
       domain: k8s
       classes: [all]
     result:
       query: |-
         {{- with .involvedObject -}}
         {{k8sClass .apiVersion .kind}}:{namespace: {{.namespace}}, name: {{.name}}}
         {{- end -}}

   - name: AllToEvent
     start:
       domain: k8s
       classes: [all]
     goal:
       domain: k8s
       classes: [Event.]
     result:
       query: |-
         k8s:Event:{"fields":{
                      "involvedObject.namespace":"{{.metadata.namespace}}",
                      "involvedObject.name": "{{.metadata.name}}",
                      "involvedObject.kind": "{{.kind}}",
                      "involvedObject.apiVersion": "{{.apiVersion}}"} }

   - name: AllToMetric
     start:
       domain: k8s
     goal:
       domain: metric
     result:
       query: |-
         metric:metric:{namespace="{{.metadata.namespace}}",{{lower .kind}}="{{.metadata.name}}"}
